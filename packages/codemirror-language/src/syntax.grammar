// TODO: Styling: Differientate Name and String (built-in types)?
// TODO: Styling: Fix commas in generic types

@skip {
  whitespace | Comment
}

@precedence {
  precedence
}

@top Document {
  definition+
}

definition {
  ObjectTypeDefinition
}

TypeKeyword {
  keyword<"type">
}

Name {
  name
}

NamedType {
  capitalizedName
}

GenericType {
  NamedType "<" list<Type> ">"
}

ArrayType {
  NamedType "[]"+
}

Type {
  NamedType | GenericType | ArrayType | FieldsDefinition
}

NamedTypeDeclaration {
  capitalizedName
}

ObjectTypeDefinition {
  TypeKeyword NamedTypeDeclaration "="? FieldsDefinition
}

FieldsDefinition {
  block<ValueDefinition+>
}

ValueDefinition {
  Name "?"? ":" Type separator?
}

@tokens {
  Comment { ("#" | "//") ![\n]* }
  
  name { $[_A-Za-z] $[_0-9A-Za-z]* }
  
  capitalizedName { $[_A-Z] $[_0-9A-Za-z]* }

  separator { comma | ";" }

  comma { "," }

  whitespace { @whitespace+ }

  "{" "}" "<" ">" "[" "]" ":"
}

keyword<term> { @specialize[@name={term}]<name, term> }

block<expression> { !precedence "{" expression "}" }

list<value> { !precedence value (comma value)* }

@detectDelim